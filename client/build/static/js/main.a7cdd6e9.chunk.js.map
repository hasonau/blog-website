{"version":3,"sources":["context/DataProvider.js","components/header/Header.jsx","components/banner/Banner.jsx","constants/data.js","components/home/Categories.jsx","constants/config.js","utils/common-utils.js","service/api.js","components/home/post/Post.jsx","components/home/post/Posts.jsx","components/home/Home.jsx","components/create/CreatePost.jsx","components/details/comments/Comment.jsx","components/details/comments/Comments.jsx","components/details/DetailView.jsx","components/create/Update.jsx","components/about/About.jsx","components/contact/Contact.jsx","components/account/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","_ref","children","account","setAccount","useState","name","username","_jsx","Provider","value","Component","styled","AppBar","Container","Toolbar","LogoutButton","Button","ContactIcon","Phone","Header","navigate","useNavigate","_jsxs","Link","to","onClick","async","Image","Box","Heading","Typography","SubHeading","Banner","categories","id","type","PlusButton","StyledLink","MainButton","ArrowIcon","ArrowDownIcon","visible","CategoryContainer","CategoryItem","_ref2","_ref3","Categories","searchParams","useSearchParams","category","get","visibleCategories","setVisibleCategories","_Fragment","style","textDecoration","variant","PlusIcon","fontSize","handleToggleCategories","prevVisible","map","index","animationDelay","API_NOTIFICATION_MESSAGES","loading","title","message","success","requestFailure","responseFailure","networkError","SERVICE_URLS","userLogin","url","method","userSignup","getAllPosts","params","getRefreshToken","uploadFile","createPost","deletePost","query","getPostById","newComment","getAllComments","deleteComment","updatePost","getType","body","_id","API_URL","window","location","origin","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","config","_config$TYPE","_config$TYPE2","accessToken","sessionStorage","getItem","authorization","TYPE","error","Promise","reject","response","processResponse","processError","status","isSuccess","data","isFailure","msg","_response$data","code","_error$response","_error$response2","_error$response2$data","isError","clear","API","key","Object","entries","showUploadProgress","showDownloadProgress","undefined","responseType","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","onDownloadProgress","width","objectFit","borderRadius","height","Text","Details","Post","post","picture","addEllipsis","str","limit","length","substring","src","alt","description","Posts","posts","getPosts","useEffect","console","fetchData","Grid","item","lg","sm","xs","color","margin","Home","container","theme","breakpoints","down","StyledFormControl","FormControl","InputTextField","InputBase","Textarea","TextareaAutosize","initialPost","createdDate","Date","CreatePost","useLocation","setPost","file","setFile","useContext","_location$search","FormData","append","getImage","search","split","handleChange","e","target","htmlFor","Add","display","onChange","files","placeholder","savePost","rowsMin","Name","StyledDate","DeleteIcon","Delete","Comment","comment","setToggle","date","toDateString","prev","removeComment","comments","StyledTextArea","initialValue","postId","Comments","setComment","setComments","toggle","getData","size","addComment","EditIcon","Edit","Author","DetailView","useParams","float","deleteBlog","fontWeight","marginLeft","Update","imageURL","setImageURL","updateBlogPost","Wrapper","AnimatedBackground","About","sx","minHeight","component","href","GitHub","Instagram","Email","Contact","BodyBackground","padding","LoginButton","SignupButton","Error","loginInitialValues","password","signupInitialValues","confirmPassword","Login","isUserAuthenticated","login","setLogin","signup","setSignup","showError","toggleAccount","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","successMessage","setSuccessMessage","onValueChange","onInputChange","toggleSignup","handleSnackbarClose","TextField","label","fullWidth","required","InputLabelProps","shrink","setItem","refreshToken","textAlign","marginBottom","Snackbar","open","autoHideDuration","onClose","Alert","severity","backgroundColor","CheckCircleIcon","verticalAlign","marginRight","ErrorIcon","PrivateRoute","isAuthenticated","props","token","Outlet","Navigate","replace","App","BrowserRouter","marginTop","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7cdd6e9.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\n\n\nexport const DataContext = createContext(null);\n\nconst DataProvider = ({ children }) => {\n    const [ account, setAccount ] = useState({ name: '', username: '' });\n        \n    return (\n        <DataContext.Provider value={{ \n            account, \n            setAccount \n        }}>\n            {children}\n        </DataContext.Provider>\n    )\n}\n\nexport default DataProvider;","import { AppBar, Toolbar, styled, Button } from '@mui/material'; \nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { Phone } from '@mui/icons-material'; // Import Phone icon\n\nconst Component = styled(AppBar)`\n    background: linear-gradient(to right, #ff7e5f, #feb47b); /* Gradient with shades */\n    color: black;\n`;\n\nconst Container = styled(Toolbar)`\n    justify-content: center;\n    & > a {\n        padding: 20px;\n        color: #000;\n        text-decoration: none;\n        display: flex;\n        align-items: center;\n        font-weight: normal; /* Default font weight */\n        transition: all 0.3s ease; /* Smooth transition for the hover effect */\n    }\n    & > a:hover {\n        font-weight: bold; /* Make text bold on hover */\n        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3); /* 3D effect with text shadow */\n    }\n`;\n\nconst LogoutButton = styled(Button)`\n    background-color: #f44336; /* Red color */\n    color: #ffffff;\n    &:hover {\n        background-color: #d32f2f; /* Darker red on hover */\n    }\n`;\n\nconst ContactIcon = styled(Phone)`\n    color: #007bff; /* Blue color */\n    font-size: 24px; /* Default size */\n    transition: all 0.3s ease; /* Smooth transition for the hover effect */\n    &:hover {\n        color: #0056b3; /* Darker blue on hover */\n        transform: scale(1.1); /* Slightly enlarge icon on hover */\n    }\n`;\n\nconst Header = () => {\n\n    const navigate = useNavigate();\n\n    const logout = async () => {\n        // Add your logout logic here if needed\n        navigate('/account');\n    };\n\n    return (\n        <Component>\n            <Container>\n                <Link to='/'>HOME</Link>\n                <Link to='/about'>ABOUT</Link>\n                <Link to='/contact'>\n                    <ContactIcon /> {/* Use Phone icon for contact */}\n                </Link>\n                <LogoutButton onClick={logout}>LOGOUT</LogoutButton>\n            </Container>\n        </Component>\n    );\n}\n\nexport default Header;\n","\nimport { styled, Box, Typography } from '@mui/material';\n\nconst Image = styled(Box)`\n    width: 100%;\n    background: url(https://images.pexels.com/photos/1714208/pexels-photo-1714208.jpeg) center/55% repeat-x #000;\n    height: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Heading = styled(Typography)`\n    font-size: 70px;\n    color: #FFFFFF;\n    line-height: 1\n`;\n\nconst SubHeading = styled(Typography)`\n    font-size: 20px;\n    font-style: italic; /* Set text to italic */\n    color: #FFFFFF; /* Ensure text color is white */\n    line-height: 1;\n`;\n\n\nconst Banner = () => {\n    \n    return (\n        <Image>\n            <Heading>BLOG</Heading>\n            <SubHeading>Latest Posts and Articles</SubHeading>\n        </Image>\n    )\n}\n\nexport default Banner;","export const categories = [\n    { id: 1, type: \"Music\" },\n    { id: 2, type: \"Movies\" },\n    { id: 3, type: \"Sports\" },\n    { id: 4, type: \"Tech\" },\n    { id: 5, type: \"Fashion\" }\n];\n","import { Button, styled } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { AddCircleOutline as PlusIcon, ExpandMore as ArrowDownIcon } from '@mui/icons-material'; // Import arrow icon\nimport { useState } from 'react'; // Import useState hook for handling visibility\n\nimport { categories } from '../../constants/data';\n\nconst PlusButton = styled(Button)`\n    position: absolute;\n    right: 20px;\n    top: 450px;\n    background: none;\n    color: Blue;\n    min-width: 0;\n    padding: 0;\n\n    &:hover {\n        color: #FF6347;\n        background: none;\n    }\n`;\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    color: #6495ED;\n    font-weight: 600;\n    display: block;\n    padding: 10px;\n    border-radius: 4px;\n    text-align: center;\n    transition: background-color 0.3s, color 0.3s;\n\n    &:hover {\n        background-color: black;\n        color: #fff;\n        font-weight: 700;\n    }\n`;\n\nconst MainButton = styled(Link)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: transparent;\n    color: #6495ED;\n    font-weight: 600;\n    border: none;\n    cursor: pointer;\n    padding: 10px 20px;\n    border-radius: 4px;\n    transition: background-color 0.3s, color 0.3s;\n    position: relative;\n\n    &:hover {\n        background-color: black;\n        color: #fff;\n        font-weight: 700;\n    }\n`;\n\nconst ArrowIcon = styled(ArrowDownIcon)`\n    margin-left: 8px; /* Space between text and arrow */\n    font-size: 20px;\n    transition: transform 0.3s ease;\n    transform: ${({ visible }) => (visible ? 'rotate(180deg)' : 'rotate(0)')}; /* Rotate arrow when categories are visible */\n`;\n\nconst CategoryContainer = styled('div')`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n`;\n\nconst CategoryItem = styled('div')`\n    opacity: ${({ visible }) => (visible ? 1 : 0)};\n    transform: ${({ visible }) => (visible ? 'translateY(0)' : 'translateY(-10px)')};\n    transition: opacity 0.3s ease, transform 0.3s ease;\n    margin-top: 10px; /* Space between categories */\n`;\n\nconst Categories = () => {\n    const [searchParams] = useSearchParams();\n    const category = searchParams.get('category');\n\n    // State to handle visibility of category buttons\n    const [visibleCategories, setVisibleCategories] = useState(true); // Default to true on page load\n\n    // Toggle visibility of categories when the arrow icon is clicked\n    const handleToggleCategories = () => {\n        setVisibleCategories((prevVisible) => !prevVisible); // Toggle visibility\n    };\n\n    return (\n        <>\n            {/* Plus button on the right side */}\n            <Link to={`/create?category=${category || ''}`} style={{ textDecoration: 'none' }}>\n                <PlusButton variant=\"contained\">\n                    <PlusIcon fontSize=\"large\" />\n                </PlusButton>\n            </Link>\n\n            <CategoryContainer>\n                {/* Main button that navigates to home page */}\n                <MainButton to=\"/\" onClick={() => setVisibleCategories(false)}>\n                    All Categories\n                </MainButton>\n\n                {/* Arrow icon separate from the button */}\n                <ArrowIcon visible={visibleCategories} onClick={handleToggleCategories} />\n\n                {/* Render categories with animation */}\n                {categories.map((category, index) => (\n                    <CategoryItem\n                        key={category.id}\n                        visible={visibleCategories}\n                        style={{ animationDelay: `${index * 0.2}s` }} // Delay for each category\n                    >\n                        <StyledLink to={`/?category=${category.type}`}>\n                            {category.type}\n                        </StyledLink>\n                    </CategoryItem>\n                ))}\n            </CategoryContainer>\n        </>\n    );\n};\n\nexport default Categories;\n","// API NOTIFICATION MESSAGES\nexport const API_NOTIFICATION_MESSAGES = {\n    loading: {\n        title: \"Loading...\",\n        message: \"Data is being loaded. Please wait\"\n    },\n    success: {\n        title: \"Success\",\n        message: \"Data successfully loaded\"\n    },\n    requestFailure: {\n        title: \"Error!\",\n        message: \"An error occur while parsing request data\"\n    },\n    responseFailure: {\n        title: \"Error!\",\n        message: \"An error occur while fetching response from server. Please try again\"\n    },\n    networkError: {\n        title: \"Error!\",\n        message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\n    }\n}\n\n// API SERVICE URL\n// SAMPLE REQUEST\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\nexport const SERVICE_URLS = {\n    userLogin: { url: '/login', method: 'POST' },\n    userSignup: { url: '/signup', method: 'POST' },\n    getAllPosts: { url: '/posts', method: 'GET', params: true },\n    getRefreshToken: { url: '/token', method: 'POST' },\n    uploadFile: { url: 'file/upload', method: 'POST' },\n    createPost: { url: 'create', method: 'POST' },\n    deletePost: { url: 'delete', method: 'DELETE', query: true },\n    getPostById: { url: 'post', method: 'GET', query: true },\n    newComment: { url: '/comment/new', method: 'POST' },\n    getAllComments: { url: 'comments', method: 'GET', query: true },\n    deleteComment: { url: 'comment/delete', method: 'DELETE', query: true },\n    updatePost: { url: 'update', method: 'PUT', query: true }\n}","\n\nexport const getAccessToken = () => {\n    return sessionStorage.getItem('accessToken');\n}\n\nexport const getRefreshToken = () => {\n    return sessionStorage.getItem('refreshToken');\n}\n\nexport const setAccessToken = (accessToken) => {\n    sessionStorage.setItem('accessToken', `Bearer ${accessToken}`);\n}\n\nexport const setRefreshToken = (refreshToken) => {\n    sessionStorage.setItem('refreshToken', `Bearer ${refreshToken}`);\n}\n\nexport const getType = (value, body) => {\n    if (value.params) {\n        return { params: body }\n    } else if (value.query) {\n        if (typeof body === 'object') {\n            return { query: body._id }\n        } else {\n            return { query: body }\n        }\n    }\n    return {};\n}","import axios from 'axios';\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config';\nimport { getAccessToken, getType } from '../utils/common-utils';\n\nconst API_URL = `${window.location.origin}`;\n\nconst axiosInstance = axios.create({\n    baseURL: API_URL,\n    timeout: 10000,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n\n// Request interceptor\naxiosInstance.interceptors.request.use(\n    function (config) {\n        const accessToken = getAccessToken();\n\n        // Attach token if available and endpoint requires it\n        if (accessToken && config.url !== SERVICE_URLS.userSignup.url) {\n            config.headers.authorization = accessToken;\n        }\n\n        // Configure params or query from TYPE object\n        if (config.TYPE?.params) {\n            config.params = config.TYPE.params;\n        } else if (config.TYPE?.query) {\n            config.url = config.url + '/' + config.TYPE.query;\n        }\n\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor\naxiosInstance.interceptors.response.use(\n    function (response) {\n        return processResponse(response);\n    },\n    function (error) {\n        return Promise.reject(processError(error));\n    }\n);\n\n// Process response\nconst processResponse = (response) => {\n    if (response?.status === 200) {\n        return { isSuccess: true, data: response.data };\n    } else {\n        return {\n            isFailure: true,\n            status: response?.status,\n            msg: response?.data?.message || 'Unknown Error Occurred',\n            code: response?.status\n        };\n    }\n};\n\n// Process error\nconst processError = (error) => {\n    if (error.response) {\n        const status = error.response?.status;\n        const message = error.response?.data?.message || \"Request failed\";\n\n        // Error mapping based on status code\n        if (status === 401) {\n            return {\n                isError: true,\n                msg: \"Incorrect username or password\",\n                code: status\n            };\n        } else if (status === 409) {\n            return {\n                isError: true,\n                msg: \"Username already exists\",\n                code: status\n            };\n        } else if (status === 403) {\n            sessionStorage.clear();\n            return {\n                isError: true,\n                msg: \"Session expired, please login again\",\n                code: status\n            };\n        } else {\n            return {\n                isError: true,\n                msg: message,\n                code: status\n            };\n        }\n    } else if (error.request) {\n        return {\n            isError: true,\n            msg: API_NOTIFICATION_MESSAGES.requestFailure,\n            code: \"\"\n        };\n    } else {\n        return {\n            isError: true,\n            msg: API_NOTIFICATION_MESSAGES.networkError,\n            code: \"\"\n        };\n    }\n};\n\n// API methods\nconst API = {};\n\n// Loop through SERVICE_URLS to create API methods\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\n    API[key] = (body, showUploadProgress, showDownloadProgress) =>\n        axiosInstance({\n            method: value.method,\n            url: value.url,\n            data: value.method === 'DELETE' ? undefined : body,\n            responseType: value.responseType,\n            TYPE: getType(value, body),\n            onUploadProgress: function (progressEvent) {\n                if (showUploadProgress) {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                    showUploadProgress(percentCompleted);\n                }\n            },\n            onDownloadProgress: function (progressEvent) {\n                if (showDownloadProgress) {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                    showDownloadProgress(percentCompleted);\n                }\n            }\n        });\n}\n\nexport { API };\n","\nimport { styled, Box, Typography } from '@mui/material';\n\nconst Container = styled(Box)`\n    border: 1px solid #d3cede;\n    border-radius: 10px;\n    margin: 10px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    height: 350px;\n    & > img, & > p {\n        padding: 0 5px 5px 5px;\n    }\n`;\n\nconst Image = styled('img')({\n    width: '100%',\n    objectFit: 'cover',\n    borderRadius: '10px 10px 0 0',\n    height: 150\n});\n\nconst Text = styled(Typography)`\n    color: #878787\n    font-size: 12px;\n`;\n\nconst Heading = styled(Typography)`\n    font-size: 18px;\n    font-weight: 600\n`;\n\nconst Details = styled(Typography)`\n    font-size: 14px;\n    word-break: break-word;\n`;\n\nconst Post = ({ post }) => {\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=752&q=80';\n    \n    const addEllipsis = (str, limit) => {\n        return str.length > limit ? str.substring(0, limit) + '...' : str;\n    } \n\n    return (\n        <Container>\n            <Image src={url} alt=\"post\" />\n            <Text>{post.categories}</Text>\n            <Heading>{addEllipsis(post.title, 20)}</Heading>\n            <Text>Author: {post.username}</Text>\n            <Details>{addEllipsis(post.description, 100)}</Details>\n        </Container>\n    )\n}\n\nexport default Post;","import { useEffect, useState } from 'react';\nimport { Grid, Box } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../../service/api';\n\n// components\nimport Post from './Post';\n\nconst Posts = () => {\n    const [posts, getPosts] = useState([]);\n    const [searchParams] = useSearchParams();\n    const category = searchParams.get('category');\n\n    useEffect(() => {\n        const fetchData = async () => { \n            try {\n                let response = await API.getAllPosts({ category: category || '' });\n                if (response.isSuccess) {\n                    getPosts(response.data);\n                } else {\n                    // Handle error here, e.g., show a message\n                    console.error('Failed to fetch posts');\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        }\n        fetchData();\n    }, [category]);\n\n    return (\n        <>\n            {\n                posts.length ? posts.map(post => (\n                    <Grid key={post._id} item lg={3} sm={4} xs={12}>\n                        <Link style={{textDecoration: 'none', color: 'inherit'}} to={`details/${post._id}`}>\n                            <Post post={post} />\n                        </Link>\n                    </Grid>\n                )) : (\n                    <Box style={{color: '#878787', margin: '140px 370px', fontSize: 18}}>\n                        No data is available for the selected category\n                    </Box>\n                )\n            }\n        </>\n    )\n}\n\nexport default Posts;\n","\nimport { Grid } from '@mui/material';\n\n//components\nimport Banner from '../banner/Banner';\nimport Categories from './Categories';\nimport Posts from './post/Posts';\n\nconst Home = () => {\n\n    return (\n        <>\n            <Banner />\n            <Grid container>\n                <Grid item lg={2} xs={12} sm={2}>\n                    <Categories />\n                </Grid>\n                <Grid container item xs={12} sm={10} lg={10}>\n                    <Posts />\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect, useContext } from 'react';\n\nimport { styled, Box, TextareaAutosize, Button, InputBase, FormControl  } from '@mui/material';\nimport { AddCircle as Add } from '@mui/icons-material';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { API } from '../../service/api';\nimport { DataContext } from '../../context/DataProvider';\n\nconst Container = styled(Box)(({ theme }) => ({\n    margin: '50px 100px',\n    [theme.breakpoints.down('md')]: {\n        margin: 0\n    }\n}));\n\nconst Image = styled('img')({\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n});\n\nconst StyledFormControl = styled(FormControl)`\n    margin-top: 10px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst InputTextField = styled(InputBase)`\n    flex: 1;\n    margin: 0 30px;\n    font-size: 25px;\n`;\n\nconst Textarea = styled(TextareaAutosize)`\n    width: 100%;\n    border: none;\n    margin-top: 50px;\n    font-size: 18px;\n    &:focus-visible {\n        outline: none;\n    }\n`;\n\nconst initialPost = {\n    title: '',\n    description: '',\n    picture: '',\n    username: '',\n    categories: '',\n    createdDate: new Date()\n}\n\nconst CreatePost = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [post, setPost] = useState(initialPost);\n    const [file, setFile] = useState('');\n    const { account } = useContext(DataContext);\n\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n    \n    useEffect(() => {\n        const getImage = async () => { \n            if(file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n                \n                const response = await API.uploadFile(data);\n                post.picture = response.data;\n            }\n        }\n        getImage();\n        post.categories = location.search?.split('=')[1] || 'All';\n        post.username = account.username;\n    }, [file])\n\n    const savePost = async () => {\n        await API.createPost(post);\n        navigate('/');\n    }\n\n    const handleChange = (e) => {\n        setPost({ ...post, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <Container>\n            <Image src={url} alt=\"post\" />\n\n            <StyledFormControl>\n                <label htmlFor=\"fileInput\">\n                    <Add fontSize=\"large\" color=\"action\" />\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    style={{ display: \"none\" }}\n                    onChange={(e) => setFile(e.target.files[0])}\n                />\n                <InputTextField onChange={(e) => handleChange(e)} name='title' placeholder=\"Title\" />\n                <Button onClick={() => savePost()} variant=\"contained\" color=\"primary\">Publish</Button>\n            </StyledFormControl>\n\n            <Textarea\n                rowsMin={5}\n                placeholder=\"Tell your story...\"\n                name='description'\n                onChange={(e) => handleChange(e)} \n            />\n        </Container>\n    )\n}\n\nexport default CreatePost;","import { useContext } from \"react\";\n\nimport { Typography, Box, styled } from \"@mui/material\";\nimport { Delete } from '@mui/icons-material';\n\nimport { API } from '../../../service/api';\nimport { DataContext } from \"../../../context/DataProvider\";\n\nconst Component = styled(Box)`\n    margin-top: 30px;\n    background: #F5F5F5;\n    padding: 10px;\n`;\n\nconst Container = styled(Box)`\n    display: flex;\n    margin-bottom: 5px;\n`;\n\nconst Name = styled(Typography)`\n    font-weight: 600,\n    font-size: 18px;\n    margin-right: 20px;\n`;\n\nconst StyledDate = styled(Typography)`\n    font-size: 14px;\n    color: #878787;\n`;\n\nconst DeleteIcon = styled(Delete)`\n    margin-left: auto;\n`;\n\nconst Comment = ({ comment, setToggle }) => {\n\n    const { account } = useContext(DataContext)\n    \n    const removeComment = async () => {\n       await API.deleteComment(comment._id);\n       setToggle(prev => !prev);\n    }\n\n    return (\n        <Component>\n            <Container>\n                <Name>{comment.name}</Name>\n                <StyledDate>{new Date(comment.date).toDateString()}</StyledDate>\n                { comment.name === account.username && <DeleteIcon onClick={() => removeComment()} /> }\n            </Container>\n            <Typography>{comment.comments}</Typography>\n        </Component>\n    )\n}\n\nexport default Comment;","import { useState, useEffect, useContext } from 'react';\nimport { Box, TextareaAutosize, Button, styled } from '@mui/material';\n\nimport { DataContext } from '../../../context/DataProvider';\n\nimport { API } from '../../../service/api';\n\n//components\nimport Comment from './Comment';\n\nconst Container = styled(Box)`\n    margin-top: 100px;\n    display: flex;\n`;\n\nconst Image = styled('img')({\n    width: 50,\n    height: 50,\n    borderRadius: '50%'\n});\n\nconst StyledTextArea = styled(TextareaAutosize)`\n    height: 100px !important;\n    width: 100%; \n    margin: 0 20px;\n`;\n\nconst initialValue = {\n    name: '',\n    postId: '',\n    date: new Date(),\n    comments: ''\n}\n\nconst Comments = ({ post }) => {\n    const url = 'https://static.thenounproject.com/png/12017-200.png'\n\n    const [comment, setComment] = useState(initialValue);\n    const [comments, setComments] = useState([]);\n    const [toggle, setToggle] = useState(false);\n\n    const { account } = useContext(DataContext);\n\n    useEffect(() => {\n        const getData = async () => {\n            const response = await API.getAllComments(post._id);\n            if (response.isSuccess) {\n                setComments(response.data);\n            }\n        }\n        getData();\n    }, [toggle, post]);\n\n    const handleChange = (e) => {\n        setComment({\n            ...comment,\n            name: account.username,\n            postId: post._id,\n            comments: e.target.value\n        });\n    }\n\n    const addComment = async() => {\n        await API.newComment(comment);\n        setComment(initialValue)\n        setToggle(prev => !prev);\n    }\n    \n    return (\n        <Box>\n            <Container>\n                <Image src={url} alt=\"dp\" />   \n                <StyledTextArea \n                    rowsMin={5} \n                    placeholder=\"what's on your mind?\"\n                    onChange={(e) => handleChange(e)} \n                    value={comment.comments}\n                />\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"medium\" \n                    style={{ height: 40 }}\n                    onClick={(e) => addComment(e)}\n                >Post</Button>             \n            </Container>\n            <Box>\n                {\n                    comments && comments.length > 0 && comments.map(comment => (\n                        <Comment comment={comment} setToggle={setToggle} />\n                    ))\n                }\n            </Box>\n        </Box>\n    )\n}\n\nexport default Comments;","import { useState, useEffect, useContext } from 'react';\n\nimport { Box, Typography, styled } from '@mui/material';\nimport { Delete, Edit } from '@mui/icons-material';\nimport { Link, useNavigate, useParams } from 'react-router-dom'\n\nimport { API } from '../../service/api';\n\nimport { DataContext } from '../../context/DataProvider';\n\n// components\nimport Comments from './comments/Comments';\n\nconst Container = styled(Box)(({ theme }) => ({\n    margin: '50px 100px',\n    [theme.breakpoints.down('md')]: {\n        margin: 0\n    },\n}));\n\nconst Image = styled('img')({\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n});\n\nconst EditIcon = styled(Edit)`\n    margin: 5px;\n    padding: 5px;\n    border: 1px solid #878787;\n    border-radius: 10px;\n`;\n\nconst DeleteIcon = styled(Delete)`\n    margin: 5px;\n    padding: 5px;\n    border: 1px solid #878787;\n    border-radius: 10px;\n`;\n\nconst Heading = styled(Typography)`\n    font-size: 38px;\n    font-weight: 600;\n    text-align: center;\n    margin: 50px 0 10px 0;\n`;\n\nconst Author = styled(Box)(({ theme }) => ({\n    color: '#878787',\n    display: 'flex',\n    margin: '20px 0',\n    [theme.breakpoints.down('sm')]: {\n        display: 'block'\n    },\n}));\n\nconst DetailView = () => {\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n    \n    const [post, setPost] = useState({});\n    const { account } = useContext(DataContext);\n\n    const navigate = useNavigate();\n    const { id } = useParams();\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            let response = await API.getPostById(id);\n            if (response.isSuccess) {\n                setPost(response.data);\n            }\n        }\n        fetchData();\n    }, []);\n\n    const deleteBlog = async () => {  \n        await API.deletePost(post._id);\n        navigate('/')\n    }\n\n    return (\n        <Container>\n            <Image src={post.picture || url} alt=\"post\" />\n            <Box style={{ float: 'right' }}>\n                {   \n                    account.username === post.username && \n                    <>  \n                        <Link to={`/update/${post._id}`}><EditIcon color=\"primary\" /></Link>\n                        <DeleteIcon onClick={() => deleteBlog()} color=\"error\" />\n                    </>\n                }\n            </Box>\n            <Heading>{post.title}</Heading>\n\n            <Author>\n                <Link to={`/?username=${post.username}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                    <Typography>Author: <span style={{fontWeight: 600}}>{post.username}</span></Typography>\n                </Link>\n                <Typography style={{marginLeft: 'auto'}}>{new Date(post.createdDate).toDateString()}</Typography>\n            </Author>\n\n            <Typography>{post.description}</Typography>\n            <Comments post={post} />\n        </Container>\n    )\n}\n\nexport default DetailView;","import React, { useState, useEffect } from 'react';\n\nimport { Box, styled, TextareaAutosize, Button, FormControl, InputBase } from '@mui/material';\nimport { AddCircle as Add } from '@mui/icons-material';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { API } from '../../service/api';\n\nconst Container = styled(Box)(({ theme }) => ({\n    margin: '50px 100px',\n    [theme.breakpoints.down('md')]: {\n        margin: 0\n    }\n}));\n\nconst Image = styled('img')({\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n});\n\nconst StyledFormControl = styled(FormControl)`\n    margin-top: 10px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst InputTextField = styled(InputBase)`\n    flex: 1;\n    margin: 0 30px;\n    font-size: 25px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n    width: 100%;\n    border: none;\n    margin-top: 50px;\n    font-size: 18px;\n    &:focus-visible {\n        outline: none;\n    }\n`;\n\nconst initialPost = {\n    title: '',\n    description: '',\n    picture: '',\n    username: 'codeforinterview',\n    categories: 'Tech',\n    createdDate: new Date()\n}\n\nconst Update = () => {\n    const navigate = useNavigate();\n\n    const [post, setPost] = useState(initialPost);\n    const [file, setFile] = useState('');\n    const [imageURL, setImageURL] = useState('');\n\n    const { id } = useParams();\n\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            let response = await API.getPostById(id);\n            if (response.isSuccess) {\n                setPost(response.data);\n            }\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const getImage = async () => { \n            if(file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n                \n                const response = await API.uploadFile(data);\n                if (response.isSuccess) {\n                    post.picture = response.data;\n                    setImageURL(response.data);    \n                }\n            }\n        }\n        getImage();\n    }, [file])\n\n    const updateBlogPost = async () => {\n        await API.updatePost(post);\n        navigate(`/details/${id}`);\n    }\n\n    const handleChange = (e) => {\n        setPost({ ...post, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <Container>\n            <Image src={post.picture || url} alt=\"post\" />\n\n            <StyledFormControl>\n                <label htmlFor=\"fileInput\">\n                    <Add fontSize=\"large\" color=\"action\" />\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    style={{ display: \"none\" }}\n                    onChange={(e) => setFile(e.target.files[0])}\n                />\n                <InputTextField onChange={(e) => handleChange(e)} value={post.title} name='title' placeholder=\"Title\" />\n                <Button onClick={() => updateBlogPost()} variant=\"contained\" color=\"primary\">Update</Button>\n            </StyledFormControl>\n\n            <StyledTextArea\n                rowsMin={5}\n                placeholder=\"Tell your story...\"\n                name='description'\n                onChange={(e) => handleChange(e)} \n                value={post.description}\n            />\n        </Container>\n    )\n}\n\nexport default Update;","import { Box, styled, Typography, Link } from '@mui/material';\nimport { GitHub, Instagram, Email } from '@mui/icons-material';\n\nconst Banner = styled(Box)`\n    background-image: url(https://www.shutterstock.com/image-illustration/about-us-letters-on-wooden-260nw-258283535.jpg);\n width: '100%',\n    objectFit: 'cover',\n    borderRadius: '10px 10px 0 0',\n    height: 150\n`;\n\nconst Wrapper = styled(Box)`\n    padding: 20px;\n    & > h3, & > h5 {\n        margin-top: 50px;\n    }\n`;\n\nconst Text = styled(Typography)`\n    color: #FFFFFF; /* Change text color to white for better readability on black background */\n`;\n\nconst UnderlinedText = styled('span')`\n    color: #FF5722;\n    text-decoration: underline;\n    text-decoration-color: #FFFFFF; /* White color for underline */\n    text-decoration-style: double; /* Double underline */\n`;\n\nconst AnimatedBackground = styled(Box)`\n    background: linear-gradient(270deg, #2c2c2c, #4a4a4a, #5c5c5c, #707070, #828282, #999999);\n    background-size: 400% 400%;\n    animation: gradientAnimation 15s ease infinite;\n\n    @keyframes gradientAnimation {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n`;\n\nconst About = () => {\n    return (\n        <AnimatedBackground sx={{ minHeight: '100vh', color: '#FFFFFF' }}>\n            <Banner />\n            <Wrapper>\n                <Typography variant=\"h3\" style={{ color: '#FFFFFF' }}>About Me</Typography> {/* White color for headings */}\n                <Text variant=\"h5\">\n                  Who Am I : <br />\n                    <span style={{ color: '#B0BEC5' }}> {/* New color for the specific text */}\n                        I am a beginner full-stack developer based in Pakistan with a passion for creative development and fresh website designs. As I continue to grow my skills in the world of full-stack development, I look forward to building innovative and visually appealing web solutions. My aim is to combine functionality with creativity, much like the one you're viewing right now.\n                    </span>\n                    <Box component=\"span\" style={{ marginLeft: 5 }}>\n                        <Link href=\"https://github.com/Shayanumair\" color=\"inherit\" target=\"_blank\">\n                            <GitHub sx={{ color: '#FFFFFF' }} /> {/* White color for GitHub icon */}\n                        </Link>\n                    </Box>\n                </Text>\n                <Text variant=\"h5\">\n                    Need something built or simply want to have a chat? Reach out to me on\n                    <Box component=\"span\" style={{ marginLeft: 5 }}>\n                        <Link href=\"https://www.instagram.com/shayanumair9?igsh=MXI4YTd6MzRoM20zcQ==\" color=\"inherit\" target=\"_blank\">\n                            <Instagram sx={{ color: '#E4405F' }} /> {/* Color for Instagram icon */}\n                        </Link>\n                    </Box>  \n                        or send me an Email \n                        <Link href=\"mailto:shayan19609@gmail.com?Subject=This is a subject\" target=\"_blank\" color=\"inherit\">\n                            <Email sx={{ color: '#EA4335' }} /> {/* Color for Email icon */}\n                        </Link>.\n                </Text>\n            </Wrapper>\n        </AnimatedBackground>\n    );\n}\n\nexport default About;\n","import { Box, styled, Typography, Link } from '@mui/material';\nimport { GitHub, Instagram, Email } from '@mui/icons-material';\n\n// Reuse the AnimatedBackground styled component\nconst AnimatedBackground = styled(Box)`\n    background: linear-gradient(270deg, #2c2c2c, #4a4a4a, #5c5c5c, #707070, #828282, #999999);\n    background-size: 400% 400%;\n    animation: gradientAnimation 15s ease infinite;\n\n    @keyframes gradientAnimation {\n        0% { background-position: 0% 50%; }\n        50% { background-position: 100% 50%; }\n        100% { background-position: 0% 50%; }\n    }\n`;\n\nconst Banner = styled(Box)`\n    background-image: url(http://mrtaba.ir/image/bg2.jpg);\n    width: 100%;\n    height: 50vh;\n    background-position: left 0px top -100px;\n    background-size: cover;\n`;\n\nconst Wrapper = styled(Box)`\n    padding: 20px;\n    & > h3, & > h5 {\n        margin-top: 50px;\n    }\n`;\n\nconst Text = styled(Typography)`\n    color: white;\n`;\n\nconst Contact = () => {\n    return (\n        <AnimatedBackground>\n            <Banner />\n            <Wrapper>\n                <Typography variant=\"h3\">Getting in touch is easy!</Typography>    \n                <Text variant=\"h5\"><br /><br />\n                    Reach out to me on\n                    <Link href=\"https://www.instagram.com/shayanumair9?igsh=MXI4YTd6MzRoM20zcQ==\" color=\"inherit\" target=\"_blank\">\n                        <Instagram sx={{ color: '#E4405F' }} />\n                    </Link>\n                    or send me an Email \n                    <Link href=\"mailto:shayan19609@gmail.com?Subject=This is a subject\" target=\"_blank\" color=\"inherit\">\n                        <Email sx={{ color: '#EA4335' }} />\n                    </Link>.\n                </Text>\n            </Wrapper>\n        </AnimatedBackground>\n    );\n}\n\nexport default Contact;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { TextField, Box, Button, Typography, styled, Snackbar, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { API } from '../../service/api';\nimport { DataContext } from '../../context/DataProvider';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'; // Green tick icon\nimport ErrorIcon from '@mui/icons-material/Error'; // Error icon\n\n// Styled component for body background with multi-shade animation\nconst BodyBackground = styled('div')`\n    height: 100vh; /* Full viewport height */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: linear-gradient(135deg, #ff7e5f, #feb47b, #ff7e5f);\n    background-size: 300% 300%;\n    animation: gradientAnimation 15s ease infinite;\n\n    @keyframes gradientAnimation {\n        0% {\n            background-position: 0% 50%;\n        }\n        50% {\n            background-position: 100% 50%;\n        }\n        100% {\n            background-position: 0% 50%;\n        }\n    }\n`;\n\n// Styled component with a vibrant gradient background for the login/signup form\nconst Component = styled(Box)`\n    width: 400px;\n    margin: auto;\n    box-shadow: 5px 2px 5px 2px rgb(0 0 0 / 0.6);\n    border-radius: 10px;\n    position: relative;\n    overflow: hidden;\n    background: linear-gradient(135deg, #ff6b6b, #f7d94c, #48dbfb); /* Vibrant gradient */\n    color: white; /* Text color for contrast */\n`;\n\nconst Image = styled('img')({\n    width: 100,\n    display: 'flex',\n    margin: 'auto',\n    padding: '50px 0 0'\n});\n\nconst Wrapper = styled(Box)`\n    padding: 25px 35px;\n    display: flex;\n    flex: 1;\n    overflow: auto;\n    flex-direction: column;\n    & > div, & > button, & > p {\n        margin-top: 20px;\n    }\n`;\n\nconst LoginButton = styled(Button)`\n    text-transform: none;\n    background: #FB641B;\n    color: #fff;\n    height: 48px;\n    border-radius: 2px;\n    &:hover {\n        background: #C0C0C0;\n    }\n`;\n\nconst SignupButton = styled(Button)`\n    text-transform: none;\n    background: #fff;\n    color: #2874f0;\n    height: 48px;\n    border-radius: 2px;\n    box-shadow: 0 2px 4px 0 rgb(0 0 0 / 20%);\n    &:hover {\n        background: #C0C0C0;\n    }\n`;\n\nconst Text = styled(Typography)`\n    color: #878787;\n    font-size: 12px;\n`;\n\nconst Error = styled(Typography)`\n    font-size: 10px;\n    color: #ff6161;\n    line-height: 0;\n    margin-top: 10px;\n    font-weight: 600;\n`;\n\nconst loginInitialValues = {\n    username: '',\n    password: ''\n};\n\nconst signupInitialValues = {\n    name: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n};\n\nconst Login = ({ isUserAuthenticated }) => {\n    const [login, setLogin] = useState(loginInitialValues);\n    const [signup, setSignup] = useState(signupInitialValues);\n    const [error, showError] = useState('');\n    const [account, toggleAccount] = useState('login');\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const navigate = useNavigate();\n    const { setAccount } = useContext(DataContext);\n\n    const imageURL = 'https://www.sesta.it/wp-content/uploads/2021/03/logo-blog-sesta-trasparente.png';\n\n    useEffect(() => {\n        showError('');\n    }, [login]);\n\n    const onValueChange = (e) => {\n        setLogin({ ...login, [e.target.name]: e.target.value });\n    };\n\n    const onInputChange = (e) => {\n        setSignup({ ...signup, [e.target.name]: e.target.value });\n    };\n\n    const loginUser = async () => {\n        let response = await API.userLogin(login);\n        if (response.isSuccess) {\n            showError('');\n            setSnackbarMessage('');\n            sessionStorage.setItem('accessToken', `Bearer ${response.data.accessToken}`);\n            sessionStorage.setItem('refreshToken', `Bearer ${response.data.refreshToken}`);\n            setAccount({ name: response.data.name, username: response.data.username });\n            \n            isUserAuthenticated(true);\n            setLogin(loginInitialValues);\n            navigate('/');\n        } else {\n            if (response.code === 401) {\n                setSnackbarMessage('Incorrect username or password');\n            } else {\n                setSnackbarMessage('Something went wrong! Please try again later');\n            }\n            setOpenSnackbar(true);\n        }\n    };\n\n    const signupUser = async () => {\n        if (signup.password !== signup.confirmPassword) {\n            showError('Passwords do not match');\n            return;\n        }\n\n        let response = await API.userSignup(signup);\n        if (response.isSuccess) {\n            showError('');\n            setSignup(signupInitialValues);\n            toggleAccount('login');\n            \n            setSuccessMessage('Successfully signed up! Please log in.');\n            setOpenSnackbar(true);\n        } else {\n            if (response.code === 409) {\n                showError('Username already exists');\n            } else {\n                showError('Something went wrong! Please try again later');\n            }\n        }\n    };\n\n    const toggleSignup = () => {\n        account === 'signup' ? toggleAccount('login') : toggleAccount('signup');\n    };\n\n    const handleSnackbarClose = () => {\n        setOpenSnackbar(false);\n        setSuccessMessage('');\n    };\n\n    return (\n        <BodyBackground>\n            <Component>\n                <Box>\n                    <Image src={imageURL} alt=\"blog\" />\n                    {\n                        account === 'login' ? (\n                            <Wrapper>\n                                <TextField \n                                    variant=\"standard\" \n                                    value={login.username} \n                                    onChange={onValueChange} \n                                    name='username' \n                                    label='Enter Username' \n                                    fullWidth \n                                    required \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} \n                                />\n                                <TextField \n                                    variant=\"standard\" \n                                    type=\"password\" \n                                    value={login.password} \n                                    onChange={onValueChange} \n                                    name='password' \n                                    label='Enter Password' \n                                    fullWidth \n                                    required \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} \n                                />\n                                {error && <Error>{error}</Error>}\n                                <LoginButton variant=\"contained\" onClick={loginUser}>Login</LoginButton>\n                                <Text style={{ textAlign: 'center' }}>OR</Text>\n                                <SignupButton onClick={toggleSignup} style={{ marginBottom: 50 }}>Create an account</SignupButton>\n                            </Wrapper>\n                        ) : (\n                            <Wrapper>\n                                <TextField \n                                    variant=\"standard\" \n                                    onChange={onInputChange} \n                                    name='name' \n                                    label='Enter Name' \n                                    fullWidth \n                                    required \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} \n                                />\n                                <TextField \n                                    variant=\"standard\" \n                                    onChange={onInputChange} \n                                    name='username' \n                                    label='Enter Username' \n                                    fullWidth \n                                    required \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} \n                                />\n                                <TextField \n                                    variant=\"standard\" \n                                    type=\"password\" \n                                    onChange={onInputChange} \n                                    name='password' \n                                    label='Enter Password' \n                                    fullWidth \n                                    required \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} \n                                />\n                                <TextField \n                                    variant=\"standard\" \n                                    type=\"password\" \n                                    onChange={onInputChange} \n                                    name='confirmPassword' \n                                    label='Confirm Password' \n                                    fullWidth \n                                    required \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} \n                                />\n                                <Text style={{ fontSize: '10px', color: '#757575' }}>Password must include uppercase, lowercase letters, and digits.</Text>\n                                {error && <Error>{error}</Error>}\n                                <SignupButton onClick={signupUser}>Signup</SignupButton>\n                                <Text style={{ textAlign: 'center' }}>OR</Text>\n                                <LoginButton variant=\"contained\" onClick={toggleSignup}>Already have an account</LoginButton>\n                            </Wrapper>\n                        )\n                    }\n                </Box>\n\n                {/* Snackbar for error and success messages */}\n                <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleSnackbarClose}>\n                    <Alert \n                        onClose={handleSnackbarClose} \n                        severity={successMessage ? \"success\" : \"error\"}\n                        sx={{ width: '100%', backgroundColor: successMessage ? '#90ee90' : 'red' }} // Light green for success\n                    >\n                        {successMessage ? (\n                            <span>\n                                <CheckCircleIcon style={{ verticalAlign: 'middle', marginRight: '5px' }} />\n                                {successMessage}\n                            </span>\n                        ) : (\n                            <span>\n                                <ErrorIcon style={{ verticalAlign: 'middle', marginRight: '5px' }} />\n                                {snackbarMessage}\n                            </span>\n                        )}\n                    </Alert>\n                </Snackbar>\n            </Component>\n        </BodyBackground>\n    );\n};\n\nexport default Login;\n","import { useState } from 'react';\n\nimport { Box } from '@mui/material';\nimport { BrowserRouter, Routes, Route, Navigate, Outlet } from 'react-router-dom';\n\n//components\nimport DataProvider from './context/DataProvider';\nimport Header from './components/header/Header';\nimport Home from './components/home/Home';\nimport CreatePost from './components/create/CreatePost';\nimport DetailView from './components/details/DetailView';\nimport Update from './components/create/Update';\nimport About from './components/about/About';\nimport Contact from './components/contact/Contact';\nimport Login from './components/account/Login';\n\nconst PrivateRoute = ({ isAuthenticated, ...props }) => {\n  const token = sessionStorage.getItem('accessToken');\n  return isAuthenticated && token ? \n    <>\n      <Header />\n      <Outlet />\n    </> : <Navigate replace to='/account' />\n};\n\nfunction App() {\n\n  const [isAuthenticated, isUserAuthenticated] = useState(false);\n\n  return (\n    <DataProvider>\n      <BrowserRouter>\n        <Box style={{ marginTop: 64 }}>\n          <Routes>\n            <Route path='/account' element={<Login isUserAuthenticated={isUserAuthenticated} />} />\n            \n            <Route path='/' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\n              <Route path='/' element={<Home />} />\n            </Route>\n\n            <Route path='/create' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\n              <Route path='/create' element={<CreatePost />} />\n            </Route>\n\n            <Route path='/details/:id' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\n              <Route path='/details/:id' element={<DetailView />} />\n            </Route>\n\n            <Route path='/update/:id' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\n              <Route path='/update/:id' element={<Update />} />\n            </Route>\n\n            <Route path='/about' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\n              <Route path='/about' element={<About />} />\n            </Route>\n\n            <Route path='/contact' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\n              <Route path='/contact' element={<Contact />} />\n            </Route>\n          </Routes>\n        </Box>\n      </BrowserRouter>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}